<?xml version="1.0"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.apache.ode</groupId>
    <artifactId>ode-dao-hibernate-db</artifactId>
    <name>ODE :: Hibernate DAO DDL Generation</name>

    <parent>
        <groupId>org.apache.ode</groupId>
        <artifactId>ode</artifactId>
        <version>1.3.9-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.apache.logging.log4j</groupId>-->
        <!--            <artifactId>log4j-api</artifactId>-->
        <!--            <version>${log4j2.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.logging.log4j</groupId>-->
        <!--            <artifactId>log4j-core</artifactId>-->
        <!--            <version>${log4j2.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.logging.log4j</groupId>-->
        <!--            <artifactId>log4j-slf4j-impl</artifactId>-->
        <!--            <version>${log4j2.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.slf4j</groupId>-->
        <!--            <artifactId>slf4j-api</artifactId>-->
        <!--            <version>${slf4j.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.slf4j</groupId>-->
        <!--            <artifactId>jcl-over-slf4j</artifactId>-->
        <!--            <version>${slf4j.version}</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbytools</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ode</groupId>
            <artifactId>ode-dao-hibernate</artifactId>
        </dependency>
    </dependencies>
    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.groovy</groupId>
                        <artifactId>groovy-ant</artifactId>
                        <version>4.0.24</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>schemagen</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <property name="maven.runtime.classpath" refid="maven.compile.classpath"/>
                                <ant antfile="build.xml" target="create-schema" inheritRefs="true"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>modify-mysql-script</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy">
                                    <classpath>
                                        <pathelement location="${settings.localRepository}/org/codehaus/groovy/groovy-ant/4.0.20/groovy-ant-4.0.20.jar"/>
                                        <pathelement location="${settings.localRepository}/org/codehaus/groovy/groovy/4.0.20/groovy-4.0.20.jar"/>
                                    </classpath>
                                </taskdef>
                                <groovy>
                                    def srcFile = new File("${project.basedir}/target/mysql.sql")
                                    def destFile = new File("${project.basedir}/target/mysqlnew.sql")

                                    destFile.withWriter("UTF-8") { writer ->
                                    def isCT = "no"
                                    srcFile.eachLine { line ->
                                    if (line.toLowerCase().matches(".*create\\s+table.*") &amp;&amp;  line.contains(";")) {
                                    writer.writeLine(line.replace(";", " ENGINE=InnoDB;"))
                                    } else if (line.toLowerCase().matches(".*create\\s+table.*") &amp;&amp; !line.contains(";")) {
                                    isCT = "yes"
                                    writer.writeLine(line)
                                    } else if (isCT == "yes" &amp;&amp; line.contains(";")) {
                                    isCT = "no"
                                    writer.writeLine(line.replace(";", " ENGINE=InnoDB;"))
                                    } else {
                                    writer.writeLine(line)
                                    }
                                    }
                                    }
                                    println "SQL modification completed. Output: " + destFile.absolutePath
                                </groovy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>zip-derby-db</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="ode.version" value="${project.version}"/>
                                <ant antfile="build.xml" target="zip-derby-db"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>create-derby-db</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.apache.derby.jdbc.EmbeddedDriver</driver>
                            <url>jdbc:derby:${basedir}/target/derby-hibdb/hibdb;create=true</url>
                            <username>sa</username>
                            <password/>
                            <autocommit>true</autocommit>
                            <onError>continue</onError>
                            <srcFiles>
                                <srcFile>target/derby.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-h2-db</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>

                        <configuration>
                            <driver>org.h2.Driver</driver>
                            <url>jdbc:h2:${basedir}/target/de-hib-h2/h2-hibdb;create=true</url>
                            <username>sa</username>
                            <password/>
                            <autocommit>true</autocommit>
                            <onError>continue</onError>
                            <srcFiles>
                                <srcFile>target/h2.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
